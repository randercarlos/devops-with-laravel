version: "3.8"
services:
  proxy:
    container_name: proxy
    build:
      context: .
      dockerfile: ./Dockerfile.proxy
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./deployment/config/proxy.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - nginx

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: dev
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/src
      - /usr/src/node_modules
    environment:
      - NODE_ENV=development
      - BASE_URL=http://localhost:3001
      - VUE_APP_API_BASE_URL=http://localhost:3002

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: api
    #command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./wait-for-it.sh redis:6379 -t 30 && php-fpm"
    restart: unless-stopped
    volumes:
      - ./api:/usr/src
      - /usr/src/vendor
      - ./deployment/config/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - mysql
      - redis

  scheduler:
    container_name: scheduler
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: scheduler
    restart: unless-stopped
    volumes:
      - ./api:/usr/src
      - /usr/src/vendor
    depends_on:
      - mysql
      - redis

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: worker
    restart: unless-stopped
    volumes:
      - ./api:/usr/src
      - /usr/src/vendor
    depends_on:
      - mysql
      - redis

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./Dockerfile.nginx
    restart: unless-stopped
    volumes:
      - ./api:/usr/src
      - ./deployment/config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api

  mysql:
    container_name: mysql
    image: mysql:8.0.33
#    build:
#      context: .
#      dockerfile: ./Dockerfile.mysql
    restart: unless-stopped
    volumes:
      - ./mysqldata:/var/lib/mysql
    ports:
      - "33060:3306"
    environment:
      MYSQL_ROOT_PASSWORD: laravel
      MYSQL_DATABASE: posts
      MYSQL_USER: devops
      MYSQL_PASSWORD: laravel

  redis:
    container_name: redis
    image: redis:7.0.11-alpine
    volumes:
      - ./redisdata:/data
    ports:
      - "63790:6379"
