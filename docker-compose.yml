version: "3.8"
services:
  proxy:
    build:
      context: .
      dockerfile: ./Dockerfile.proxy
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./deployment/config/proxy.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - nginx

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: dev
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/src
      - /usr/src/node_modules
    environment:
      - NODE_ENV=development

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: api
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./wait-for-it.sh redis:6379 -t 30 && php-fpm"
    restart: unless-stopped
    volumes:
#      - ./api/app:/usr/src/app
#      - ./api/config:/usr/src/config
#      - ./api/database:/usr/src/database
#      - ./api/routes:/usr/src/routes
#      - ./api/storage:/usr/src/storage
#      - ./api/tests:/usr/src/tests
#      - ./api/composer.json:/usr/src/composer.json
#      - ./api/composer.lock:/usr/src/composer.lock
#      - ./.env:/usr/src/.env
      - ./api:/usr/src
      - /usr/src/vendor
      - ./deployment/config/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - update
      - mysql
      - redis

  scheduler:
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: scheduler
    restart: unless-stopped
    volumes:
#      - ./api/app:/usr/src/app
#      - ./api/config:/usr/src/config
#      - ./api/database:/usr/src/database
#      - ./api/routes:/usr/src/routes
#      - ./api/storage:/usr/src/storage
#      - ./api/tests:/usr/src/tests
#      - ./api/composer.json:/usr/src/composer.json
#      - ./api/composer.lock:/usr/src/composer.lock
#      - ./.env:/usr/src/.env
      - ./api:/usr/src
      - /usr/src/vendor
    depends_on:
      - update
      - mysql
      - redis

  worker:
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: worker
    restart: unless-stopped
    volumes:
#      - ./api/app:/usr/src/app
#      - ./api/config:/usr/src/config
#      - ./api/database:/usr/src/database
#      - ./api/routes:/usr/src/routes
#      - ./api/storage:/usr/src/storage
#      - ./api/tests:/usr/src/tests
#      - ./api/composer.json:/usr/src/composer.json
#      - ./api/composer.lock:/usr/src/composer.lock
#      - ./.env:/usr/src/.env
      - ./api:/usr/src
      - /usr/src/vendor
    depends_on:
      - update
      - mysql
      - redis

  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile.nginx
    restart: unless-stopped
    volumes:
      - ./api:/usr/src
      - ./deployment/config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api

  mysql:
    image: mysql:8.0.33
    container_name: mysql
#    build:
#      context: .
#      dockerfile: ./Dockerfile.mysql
    restart: unless-stopped
    volumes:
      - ./mysqldata:/var/lib/mysql
    ports:
      - "33060:3306"
    environment:
      MYSQL_ROOT_PASSWORD: laravel
      MYSQL_DATABASE: posts
      MYSQL_USER: devops
      MYSQL_PASSWORD: laravel

  redis:
    image: redis:7.0.11-alpine
    restart: unless-stopped
    volumes:
      - ./redisdata:/data
    ports:
      - "63790:6379"

  update:
    build:
#      args:
#        user: martin
#        uid: 1000
      context: .
      dockerfile: ./api/Dockerfile
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./update.sh"
    restart: no
    volumes:
      - ./api/composer.json:/usr/src/composer.json
      - ./api/composer.lock:/usr/src/composer.lock
      - ./.env:/usr/src/.env
      - ./deployment/bin/update.sh:/usr/src/update.sh
    depends_on:
      - mysql

  migrate:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && php /usr/src/artisan migrate --force"
    restart: no
    depends_on:
      - mysql
